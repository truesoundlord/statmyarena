package MagicArena;

import java.awt.Color;
import java.util.BitSet;

/**
 *
 * @author Dimitri "Hurukan" <soundlord@gmail.com>
 */
public final class ma_Couleurs extends javax.swing.JPanel 
{

	/**
	 * Creates new form ma_Couleurs
	 */
	public ma_Couleurs() 
	{
		this.DeckColors = new BitSet(5);
		intrep=0;
		initComponents();
		setBackground(new Color(31, 112, 121,255));
	}
	
	public ma_Couleurs(BitSet Couleurs)
	{
		this.DeckColors = new BitSet(5);
		intrep=0;
		initComponents();
		DeckColors=(BitSet)Couleurs.clone();
		setBackground(new Color(31, 112, 121,255));
		
		SetIcons();
	}
	

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabelNoir = new javax.swing.JLabel();
    jLabelRouge = new javax.swing.JLabel();
    jLabelVert = new javax.swing.JLabel();
    jLabelBleu = new javax.swing.JLabel();
    jLabelBlanc = new javax.swing.JLabel();

    jLabelNoir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabelNoir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MagicArena/images/mananoir.png"))); // NOI18N

    jLabelRouge.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MagicArena/images/manarouge.png"))); // NOI18N

    jLabelVert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MagicArena/images/manavert.png"))); // NOI18N

    jLabelBleu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MagicArena/images/manableu.png"))); // NOI18N

    jLabelBlanc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MagicArena/images/manablanc.png"))); // NOI18N

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(jLabelNoir)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabelRouge)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabelVert)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabelBleu)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabelBlanc)
        .addGap(0, 11, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jLabelBlanc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addComponent(jLabelNoir)
      .addComponent(jLabelRouge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addComponent(jLabelVert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addComponent(jLabelBleu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents

	// positions dans le BitSet
	
	final static int NOIR=0;
	final static int ROUGE=1;
	final static int VERT=2;
	final static int BLEU=3;
	final static int BLANC=4;
	
	// valeurs binaires
	
	final static int VALNOIR=1;
	final static int VALROUGE=2;
	final static int VALVERT=4;
	final static int VALBLEU=8;
	final static int VALBLANC=16;
	
	public BitSet DeckColors;
	public Integer intrep;
	public String binrep; 
	public byte[] byterep;
	
	/**
	 * Creates new form panelCouleur
	 */
	

	public void SetIcons()
	{
		if(DeckColors.get(NOIR)==false) jLabelNoir.setVisible(false);
		if(DeckColors.get(ROUGE)==false) jLabelRouge.setVisible(false);
		if(DeckColors.get(VERT)==false) jLabelVert.setVisible(false);
		if(DeckColors.get(BLEU)==false) jLabelBleu.setVisible(false);
		if(DeckColors.get(BLANC)==false) jLabelBlanc.setVisible(false);
		
		validate();
		setVisible(true);
	}

	
	public void SetIcons(int value)
	{
		if((value&VALNOIR)==VALNOIR) jLabelNoir.setVisible(true);
		if((value&VALROUGE)==VALROUGE) jLabelRouge.setVisible(true);
		if((value&VALVERT)==VALVERT) jLabelVert.setVisible(true);
		if((value&VALBLEU)==VALBLEU) jLabelBleu.setVisible(true);
		if((value&VALBLANC)==VALBLANC) jLabelBlanc.setVisible(true);
		
		validate();
		setVisible(true);
		
	}
	
	public int getInt()
	{
		intrep=0;
		if(DeckColors.get(NOIR)==true) intrep+=1;
		if(DeckColors.get(ROUGE)==true) intrep+=2;
		if(DeckColors.get(VERT)==true) intrep+=4;
		if(DeckColors.get(BLEU)==true) intrep+=8;
		if(DeckColors.get(BLANC)==true) intrep+=16;
		
		return intrep;
	}
	
	public static int getInt(BitSet color)
	{
		int intrep=0;
		if(color.get(NOIR)==true) intrep+=1;
		if(color.get(ROUGE)==true) intrep+=2;
		if(color.get(VERT)==true) intrep+=4;
		if(color.get(BLEU)==true) intrep+=8;
		if(color.get(BLANC)==true) intrep+=16;
		
		return intrep;
	}
	
	/**
	 *
	 * @return
	 */
	public String getBinaryString()
	{
		byterep=new byte[5];
		
		if(DeckColors.get(NOIR)==true) byterep[NOIR]=1;
		if(DeckColors.get(ROUGE)==true) byterep[ROUGE]=1;
		if(DeckColors.get(VERT)==true) byterep[VERT]=1;
		if(DeckColors.get(BLEU)==true) byterep[BLEU]=1;
		if(DeckColors.get(BLANC)==true) byterep[BLANC]=1;
		
		binrep=String.format("%d%d%d%d%d", byterep[0],byterep[1],byterep[2],byterep[3],byterep[4]);
		
		return binrep;
	}
	
	
  // Variables declaration - do not modify//GEN-BEGIN:variables
  public javax.swing.JLabel jLabelBlanc;
  public javax.swing.JLabel jLabelBleu;
  public javax.swing.JLabel jLabelNoir;
  public javax.swing.JLabel jLabelRouge;
  public javax.swing.JLabel jLabelVert;
  // End of variables declaration//GEN-END:variables

	void ClearIcons() 
	{
		DeckColors.clear();
	}
}
